apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-stset
  namespace: exercises
spec:
  serviceName: postgres-svc
  replicas: 1
  selector:
    matchLabels:
      app: postgresapp
  template:
    metadata:
      labels:
        app: postgresapp
    spec:
      containers:
        - name: postgres
          image: postgres:alpine3.22
          ports:
            - containerPort: 5432
              name: postgres-port
          volumeMounts:
            - name: postgres-data-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
          env:
            - name: PGDATA
              valueFrom:
                configMapKeyRef:
                  name: information-config
                  key: PGDATA
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-key
                  key: PGPASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-key
                  key: PGUSER
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-key
                  key: PGDATABASE
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  name: information-config
                  key: PGHOST
            - name: PGPORT
              valueFrom:
                configMapKeyRef:
                  name: information-config
                  key: PGPORT
  volumeClaimTemplates:
    - metadata:
        name: postgres-data-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: standard-rwo
        resources:
          requests:
            storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  namespace: exercises
  labels:
    app: postgresapp
spec:
  selector:
    app: postgresapp
  clusterIP: None
  ports:
    - port: 5432
      targetPort: postgres-port
      name: postgres
