name: Release application

on:
  push:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: asia-southeast1-a
  REGISTRY: asia-southeast1-docker.pkg.dev
  REPOSITORY: my-repository
  FRONTEND_IMAGE: todoapp
  BACKEND_IMAGE: todoapp-backend
  SERVICE: todoapp
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v2

      - name: "Use gcloud CLI"
        run: gcloud info

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker asia-southeast1-docker.pkg.dev --quiet

      - name: "Get GKE credentials"
        uses: "google-github-actions/get-gke-credentials@v2"
        with:
          cluster_name: "${{ env.GKE_CLUSTER }}"
          project_id: "${{ env.PROJECT_ID }}"
          location: "${{ env.GKE_ZONE }}"

      - name: "Form image names"
        run: |-
          echo "FRONTEND_TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY/$FRONTEND_IMAGE:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV
          echo "BACKEND_TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY/$BACKEND_IMAGE:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV

      - name: Build Frontend
        run: |-
          cd the_project/todo-app
          docker build --tag $FRONTEND_TAG .

      - name: Build Backend
        run: |-
          cd the_project/todo-app-backend
          docker build --tag $BACKEND_TAG .

      - name: Publish
        run: |-
          docker push $FRONTEND_TAG
          docker push $BACKEND_TAG

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2.1.0

      - name: Create Kubernetes secrets
        run: |-
          kubectl create secret generic postgres-key \
            --from-literal=PGUSER="${{ secrets.POSTGRES_USER }}" \
            --from-literal=PGDATABASE="${{ secrets.POSTGRES_DATABASE }}" \
            --from-literal=PGPASSWORD="${{ secrets.POSTGRES_PASSWORD }}" \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy
        run: |-
          kustomize edit set image todoapp-kustomization=$FRONTEND_TAG
          kustomize edit set image todoapp-backend-kustomization=$BACKEND_TAG
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment $SERVICE
          kubectl get services -o wide
